# github actions configuration file.
# Stanislav Sotnikov (ssotnikov@ccny.cuny.edu)

on:
  pull_request:
    branches: [master, release/*]

jobs:
  format-check:
    # Checks formatting with black.
    name: format-check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install pipenv.
        run: |
          python -m pip install --upgrade pipenv

      - id: cache-pipenv
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv sync --dev

      - name: Run black
        run: |
          pipenv run black -l 80 --check tests/ ascii_docs_t1/

      - name: Run isort
        run: |
          pipenv run isort --check tests/ ascii_docs_t1/

  mypy-check:
    name: mypy-check
    # Check proper type annotations with mypy.
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install pipenv.
        run: |
          python -m pip install --upgrade pipenv

      - id: cache-pipenv
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv sync --dev

      - name: Run mypy
        run: |
          pipenv run mypy tests/ ascii_docs_t1

  tests:
    name: tests
    # Run unittests and update coverage.
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [mypy-check, format-check]
    permissions:
      statuses: write
      checks: write
    steps:

      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install pipenv.
        run: |
          python -m pip install --upgrade pipenv

      - id: cache-pipenv
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv sync --dev

      - name: Run pytest
        run: |
          cov=$(pipenv run pytest --cov=ascii_docs_t1/ tests/)
          total=$(echo "$cov" | grep TOTAL | grep -o -E [0-9]+%$)
          echo "Coverage: ${total}"
          echo "total=${total}" >> $GITHUB_ENV

      - name: Coverage check in PR
        uses: LouisBrunner/checks-action@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: coverage
          conclusion: neutral
          output: |
            {"summary": "${{ env.total }}", "title": "${{ env.total }}"}
